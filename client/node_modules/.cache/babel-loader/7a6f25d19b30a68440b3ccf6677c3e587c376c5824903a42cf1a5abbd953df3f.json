{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProfessionService from \"../services/ProfessionService\";\nexport default {\n  name: \"profession\",\n  data() {\n    return {\n      currentProfession: null,\n      message: ''\n    };\n  },\n  methods: {\n    getProfession(id) {\n      ProfessionService.get(id).then(response => {\n        this.currentProfession = response.data;\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    updatePublished(status) {\n      var data = {\n        id: this.currentProfession.id,\n        name: this.currentProfession.name,\n        note: this.currentProfession.note,\n        published: status\n      };\n      ProfessionService.update(this.currentProfession.id, data).then(response => {\n        console.log(response.data);\n        this.currentProfession.published = status;\n        this.message = 'The status was updated successfully!';\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    updateProfession() {\n      ProfessionService.update(this.currentProfession.id, this.currentProfession).then(response => {\n        console.log(response.data);\n        this.message = 'The profession was updated successfully!';\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    deleteProfession() {\n      ProfessionService.delete(this.currentProfession.id).then(response => {\n        console.log(response.data);\n        this.$router.push({\n          name: \"professions\"\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  },\n  mounted() {\n    this.message = '';\n    this.getProfession(this.$route.params.id);\n  }\n};","map":{"version":3,"names":["ProfessionService","name","data","currentProfession","message","methods","getProfession","id","get","then","response","console","log","catch","e","updatePublished","status","note","published","update","updateProfession","deleteProfession","delete","$router","push","mounted","$route","params"],"sources":["C:\\projects\\vue-spring\\client\\src\\components\\Profession.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"currentProfession\" class=\"edit-form\">\r\n    <h4>Profession</h4>\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"name\"\r\n               v-model=\"currentProfession.name\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"note\">Note</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"note\"\r\n               v-model=\"currentProfession.note\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label><strong>Status:</strong></label>\r\n        {{ currentProfession.published ? \"Published\" : \"Pending\" }}\r\n      </div>\r\n    </form>\r\n    <button class=\"badge badge-primary mr-2\"\r\n            v-if=\"currentProfession.published\"\r\n            @click=\"updatePublished(false)\"\r\n    >\r\n      UnPublish\r\n    </button>\r\n    <button v-else class=\"badge badge-primary mr-2\"\r\n            @click=\"updatePublished(true)\"\r\n    >\r\n      Publish\r\n    </button>\r\n\r\n    <button class=\"badge badge-danger mr-2\"\r\n            @click=\"deleteProfession\"\r\n    >\r\n      Delete\r\n    </button>\r\n\r\n    <button type=\"submit\" class=\"badge badge-success\"\r\n            @click=\"updateProfession\"\r\n    >\r\n      Update\r\n    </button>\r\n    <p>{{ message }}</p>\r\n  </div>\r\n\r\n  <div v-else>\r\n    <br/>\r\n    <p>Please click on a Profession...</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProfessionService from \"../services/ProfessionService\";\r\n\r\nexport default {\r\n  name: \"profession\",\r\n  data() {\r\n    return {\r\n      currentProfession: null,\r\n      message: ''\r\n    };\r\n  },\r\n  methods: {\r\n    getProfession(id) {\r\n      ProfessionService.get(id)\r\n          .then(response => {\r\n            this.currentProfession = response.data;\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    },\r\n\r\n    updatePublished(status) {\r\n      var data = {\r\n        id: this.currentProfession.id,\r\n        name: this.currentProfession.name,\r\n        note: this.currentProfession.note,\r\n        published: status\r\n      };\r\n\r\n      ProfessionService.update(this.currentProfession.id, data)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.currentProfession.published = status;\r\n            this.message = 'The status was updated successfully!';\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    },\r\n\r\n    updateProfession() {\r\n      ProfessionService.update(this.currentProfession.id, this.currentProfession)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.message = 'The profession was updated successfully!';\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    },\r\n\r\n    deleteProfession() {\r\n      ProfessionService.delete(this.currentProfession.id)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.$router.push({name: \"professions\"});\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.message = '';\r\n    this.getProfession(this.$route.params.id);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.edit-form {\r\n  max-width: 300px;\r\n  margin: auto;\r\n}\r\n</style>\r\n"],"mappings":";AAuDA,OAAOA,iBAAgB,MAAO,+BAA+B;AAE7D,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,IAAI;MACvBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,EAAE,EAAE;MAChBP,iBAAiB,CAACQ,GAAG,CAACD,EAAE,EACnBE,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACP,iBAAgB,GAAIO,QAAQ,CAACR,IAAI;QACtCS,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACR,IAAI,CAAC;MAC5B,CAAC,EACAW,KAAK,CAACC,CAAA,IAAK;QACVH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB,CAAC,CAAC;IACR,CAAC;IAEDC,eAAeA,CAACC,MAAM,EAAE;MACtB,IAAId,IAAG,GAAI;QACTK,EAAE,EAAE,IAAI,CAACJ,iBAAiB,CAACI,EAAE;QAC7BN,IAAI,EAAE,IAAI,CAACE,iBAAiB,CAACF,IAAI;QACjCgB,IAAI,EAAE,IAAI,CAACd,iBAAiB,CAACc,IAAI;QACjCC,SAAS,EAAEF;MACb,CAAC;MAEDhB,iBAAiB,CAACmB,MAAM,CAAC,IAAI,CAAChB,iBAAiB,CAACI,EAAE,EAAEL,IAAI,EACnDO,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACR,IAAI,CAAC;QAC1B,IAAI,CAACC,iBAAiB,CAACe,SAAQ,GAAIF,MAAM;QACzC,IAAI,CAACZ,OAAM,GAAI,sCAAsC;MACvD,CAAC,EACAS,KAAK,CAACC,CAAA,IAAK;QACVH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB,CAAC,CAAC;IACR,CAAC;IAEDM,gBAAgBA,CAAA,EAAG;MACjBpB,iBAAiB,CAACmB,MAAM,CAAC,IAAI,CAAChB,iBAAiB,CAACI,EAAE,EAAE,IAAI,CAACJ,iBAAiB,EACrEM,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACR,IAAI,CAAC;QAC1B,IAAI,CAACE,OAAM,GAAI,0CAA0C;MAC3D,CAAC,EACAS,KAAK,CAACC,CAAA,IAAK;QACVH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB,CAAC,CAAC;IACR,CAAC;IAEDO,gBAAgBA,CAAA,EAAG;MACjBrB,iBAAiB,CAACsB,MAAM,CAAC,IAAI,CAACnB,iBAAiB,CAACI,EAAE,EAC7CE,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACR,IAAI,CAAC;QAC1B,IAAI,CAACqB,OAAO,CAACC,IAAI,CAAC;UAACvB,IAAI,EAAE;QAAa,CAAC,CAAC;MAC1C,CAAC,EACAY,KAAK,CAACC,CAAA,IAAK;QACVH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB,CAAC,CAAC;IACR;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,OAAM,GAAI,EAAE;IACjB,IAAI,CAACE,aAAa,CAAC,IAAI,CAACoB,MAAM,CAACC,MAAM,CAACpB,EAAE,CAAC;EAC3C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}