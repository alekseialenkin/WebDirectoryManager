{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"edit-form\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Profession\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Name\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"note\"\n}, \"Note\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"Status:\")], -1 /* HOISTED */);\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Please click on a Profession...\", -1 /* HOISTED */);\nconst _hoisted_12 = [_hoisted_10, _hoisted_11];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.currentProfession ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", null, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentProfession.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentProfession.name]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"note\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.currentProfession.note = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentProfession.note]])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createTextVNode(\" \" + _toDisplayString($data.currentProfession.published ? \"Published\" : \"Pending\"), 1 /* TEXT */)])]), _createElementVNode(\"button\", {\n    class: \"badge badge-danger mr-2\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.deleteProfession && $options.deleteProfession(...args))\n  }, \" Delete \"), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"badge badge-success\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.updateProfession && $options.updateProfession(...args))\n  }, \" Update \"), _createElementVNode(\"p\", null, _toDisplayString($data.message), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [..._hoisted_12]));\n}","map":{"version":3,"names":["key","class","_createElementVNode","for","_hoisted_10","_hoisted_11","$data","currentProfession","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","id","_cache","$event","name","_hoisted_5","_hoisted_6","note","_hoisted_7","_hoisted_8","_createTextVNode","_toDisplayString","published","onClick","args","$options","deleteProfession","updateProfession","message","_hoisted_9","_hoisted_12"],"sources":["C:\\projects\\vue-spring\\client\\src\\components\\Profession.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"currentProfession\" class=\"edit-form\">\r\n    <h4>Profession</h4>\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"name\"\r\n               v-model=\"currentProfession.name\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"note\">Note</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"note\"\r\n               v-model=\"currentProfession.note\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label><strong>Status:</strong></label>\r\n        {{ currentProfession.published ? \"Published\" : \"Pending\" }}\r\n      </div>\r\n    </form>\r\n\r\n    <button class=\"badge badge-danger mr-2\"\r\n            @click=\"deleteProfession\"\r\n    >\r\n      Delete\r\n    </button>\r\n\r\n    <button type=\"submit\" class=\"badge badge-success\"\r\n            @click=\"updateProfession\"\r\n    >\r\n      Update\r\n    </button>\r\n    <p>{{ message }}</p>\r\n  </div>\r\n\r\n  <div v-else>\r\n    <br/>\r\n    <p>Please click on a Profession...</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProfessionService from \"../services/ProfessionService\";\r\n\r\nexport default {\r\n  name: \"professionComponent\",\r\n  data() {\r\n    return {\r\n      currentProfession: null,\r\n      message: ''\r\n    };\r\n  },\r\n  methods: {\r\n    getProfession(id) {\r\n      ProfessionService.get(id)\r\n          .then(response => {\r\n            this.currentProfession = response.data;\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    },\r\n\r\n    updateProfession() {\r\n      ProfessionService.update(this.currentProfession.id, this.currentProfession)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.message = 'The profession was updated successfully!';\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    },\r\n\r\n    deleteProfession() {\r\n      ProfessionService.delete(this.currentProfession.id)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.$router.push({name: \"professions\"});\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.message = '';\r\n    this.getProfession(this.$route.params.id);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.edit-form {\r\n  max-width: 300px;\r\n  margin: auto;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;EACgCC,KAAK,EAAC;;gCAClCC,mBAAA,CAAmB,YAAf,YAAU;;EAEPD,KAAK,EAAC;AAAY;gCACrBC,mBAAA,CAA8B;EAAvBC,GAAG,EAAC;AAAM,GAAC,MAAI;;EAKnBF,KAAK,EAAC;AAAY;gCACrBC,mBAAA,CAA8B;EAAvBC,GAAG,EAAC;AAAM,GAAC,MAAI;;EAMnBF,KAAK,EAAC;AAAY;gCACrBC,mBAAA,CAAuC,gB,aAAhCA,mBAAA,CAAwB,gBAAhB,SAAO,E;;EAlB9BF,GAAA;AAAA;iCAsCIE,mBAAA,CAAK;iCACLA,mBAAA,CAAsC,WAAnC,iCAA+B;qBADlCE,WAAK,EACLC,WAAsC,C;;SAtC7BC,KAAA,CAAAC,iBAAiB,I,cAA5BC,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCJC,UAAmB,EACnBR,mBAAA,CAkBO,eAjBLA,mBAAA,CAKM,OALNS,UAKM,GAJJC,UAA8B,E,gBAC9BV,mBAAA,CAEE;IAFKW,IAAI,EAAC,MAAM;IAACZ,KAAK,EAAC,cAAc;IAACa,EAAE,EAAC,MAAM;IANzD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOwBV,KAAA,CAAAC,iBAAiB,CAACU,IAAI,GAAAD,MAAA;iDAAtBV,KAAA,CAAAC,iBAAiB,CAACU,IAAI,E,KAGxCf,mBAAA,CAKM,OALNgB,UAKM,GAJJC,UAA8B,E,gBAC9BjB,mBAAA,CAEE;IAFKW,IAAI,EAAC,MAAM;IAACZ,KAAK,EAAC,cAAc;IAACa,EAAE,EAAC,MAAM;IAZzD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAawBV,KAAA,CAAAC,iBAAiB,CAACa,IAAI,GAAAJ,MAAA;iDAAtBV,KAAA,CAAAC,iBAAiB,CAACa,IAAI,E,KAIxClB,mBAAA,CAGM,OAHNmB,UAGM,GAFJC,UAAuC,EAlB/CC,gBAAA,CAkB+C,GACvC,GAAAC,gBAAA,CAAGlB,KAAA,CAAAC,iBAAiB,CAACkB,SAAS,2C,KAIlCvB,mBAAA,CAIS;IAJDD,KAAK,EAAC,yBAAyB;IAC9ByB,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAY,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAC/B,UAED,GAEAzB,mBAAA,CAIS;IAJDW,IAAI,EAAC,QAAQ;IAACZ,KAAK,EAAC,qBAAqB;IACxCyB,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAY,IAAA,KAAEC,QAAA,CAAAE,gBAAA,IAAAF,QAAA,CAAAE,gBAAA,IAAAH,IAAA,CAAgB;KAC/B,UAED,GACAzB,mBAAA,CAAoB,WAAAsB,gBAAA,CAAdlB,KAAA,CAAAyB,OAAO,iB,oBAGfvB,mBAAA,CAGM,OAxCRwB,UAAA,MAAAC,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}